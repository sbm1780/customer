status = warn
name= LogConfigDemo

# Log files location
property.basePath = c:/dev/logs
property.app_name = ${bundle:application:spring.application.name}
# Console appender name and pattern
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
#appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#logging.pattern.level=%5p [${spring.zipkin.service.name:${spring.application.name:}},%X{traceId},%X{spanId}]
appender.console.layout.pattern = [logLevel=%-5p]-- [${app_name},%X{traceId}/%X{spanId}] -- %d %d{Z} -- %t %c - %m%n



# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${basePath}/app.log
appender.rolling.filePattern= ${basePath}/app_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
#appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
#appender.rolling.layout.pattern=[logLevel=%-5p]-- [${spring.application.name},%X{traceId}/%X{spanId}] -- %d %d{Z} -- %t %c - %m%n
appender.rolling.layout.pattern = [logLevel=%-5p]-- [${app_name},%X{traceId}/%X{spanId}] -- %d %d{Z} -- %t %c - %m%n

appender.rolling.policies.type = Policies

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure root logger
rootLogger.level = info
rootLogger.appenderRef.stdout.ref = consoleLogger
rootLogger.appenderRef.rolling.ref = fileLogger